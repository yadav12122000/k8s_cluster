---
# tasks file for kube_cluster
- yum:
    name:
         - docker
         - iproute-tc
    state: present

- name: copy the repo
  copy:
      dest: /etc/yum.repos.d/kubernetes.repo
      content: |
         [kubernetes]
         name=Kubernetes
         baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-$basearch
         enabled=1
         gpgcheck=1
         repo_gpgcheck=1
         gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
  register: repo
- debug:
       var: repo

- name: install kubelet kubeclt kubeadm
  yum:
   name:
          - kubectl
          - kubelet
          - kubeadm
   state: present
   enablerepo: kubernetes
  register: y

- debug:
       var: y


- name: start the docker service
  service:
          name: "{{item}}"
          state: started
          enabled: yes
  with_items:
         - kubelet
         - docker
- name: status checking
  command: "kubeadm config images pull"
  register: sta
- debug:
       var: sta

- copy:
    dest: /etc/docker/daemon.json
    content: |
            {
              "exec-opts": ["native.cgroupdriver=systemd"]
            }
- service:
       name: docker
       state: restarted
- name: Update config file for k8s
  copy:
    dest: /etc/sysctl.d/k8s.conf
    content: |
      net.bridge.bridge-nf-call-ip6tables = 1
      net.bridge.bridge-nf-call-iptables = 1
  register: g
- debug:
   var: g

- name: restarting sysctl
  command: sysctl --system
  register: h
- debug:
   var: h
- command: "kubeadm init --pod-network-cidr=10.244.0.0/16 --ignore-preflight-errors=NumCPU --ignore-preflight-errors=Mem"
  register: ty
  ignore_errors: yes
  when: 
    node_name == "master"
- debug:
       var: ty
  when: 
    node_name == "master"

- name: create folder and copy the conf file
  shell: "{{item}}"
  with_items:
              - mkdir -p $HOME/.kube
              - cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
              - chown $(id -u):$(id -g) $HOME/.kube/config
  when: 
    node_name == "master"
- name: flannel run
  shell: "kubectl apply  -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml"
  when: 
    node_name == "master"
- name: create token
  shell: "kubeadm token create  --print-join-command"
  register: token_cr
  when: 
    node_name == "master"
- debug:
     var: token_cr.stdout
  when: 
    node_name == "master"

- name: copy the token to file in local system
  copy:
  # local_action:
          # module: copy
      content: "{{ token_cr.stdout_lines[0] }}"
      dest: "/etc/ansible/roles/kube_cluster/files/token_file"
  delegate_to: 127.0.0.1
  when:
      node_name == "master"
- name: copy the token file in worker node
  copy: 
    src: "/etc/ansible/roles/kube_cluster/files/token_file"
    dest: "/root/token.sh"
  register: mc 
  when:
      node_name == "worker"
- debug:
     var: mc
  when:
     node_name == "worker"

- name: run the bash file
  shell: "bash  /root/token.sh"
  register: op
  when:
     node_name == "worker"
- debug:
     var: op
  when:
     node_name == "worker"



